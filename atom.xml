<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[聂同学]]></title>
  <link href="http://www.nietongxue.xyz/atom.xml" rel="self"/>
  <link href="http://www.nietongxue.xyz/"/>
  <updated>2018-09-08T15:31:48+08:00</updated>
  <id>http://www.nietongxue.xyz/</id>
  <author>
    <name><![CDATA[nielinjie]]></name>
    <email><![CDATA[nielinjie@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[蓝图与拼图]]></title>
    <link href="http://www.nietongxue.xyz/blog/2018/02/17/deep-wide/"/>
    <updated>2018-02-17T11:23:47+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2018/02/17/deep-wide</id>
    
    <category term="/架构"/>
    
    <category term="/方法论"/>
    
    <category term="/思维"/>
    
    <content type="html">
      <![CDATA[<p>蓝图与拼图，是类比于分析和解决问题的两种过程模式。联系到前面的文章<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，可以说也是“驱动”的两种模式。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2018/02/17/deep-wide/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[领域驱动作为一种驱动技术]]></title>
    <link href="http://www.nietongxue.xyz/blog/2018/02/04/dd-as-d/"/>
    <updated>2018-02-04T14:35:34+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2018/02/04/dd-as-d</id>
    
    <category term="/架构"/>
    
    <category term="/领域驱动"/>
    
    <category term="/方法论"/>
    
    <category term="/过程"/>
    
    <category term="/领域"/>
    
    <content type="html">
      <![CDATA[<p>之前就“驱动”、“领域驱动”这些主题做了一些讨论，现在看看作为一种架构设计的驱动技术，“领域驱动”有何特点。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2018/02/04/dd-as-d/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DDD的D、D、D]]></title>
    <link href="http://www.nietongxue.xyz/blog/2018/01/20/d-d-d/"/>
    <updated>2018-01-20T14:34:51+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2018/01/20/d-d-d</id>
    
    <category term="/架构"/>
    
    <category term="/过程"/>
    
    <category term="/领域"/>
    
    <category term="/领域驱动"/>
    
    <category term="/方法论"/>
    
    <content type="html">
      <![CDATA[<p>DDD就是领域驱动设计，这里想要分别谈一下DDD里面的三个D。兼谈一点我们实际的开发团队的DDD实践活动，我们的收获和教训。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2018/01/20/d-d-d/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[“驱动者”说]]></title>
    <link href="http://www.nietongxue.xyz/blog/2018/01/14/driver/"/>
    <updated>2018-01-14T23:16:37+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2018/01/14/driver</id>
    
    <category term="/架构"/>
    
    <category term="/过程"/>
    
    <category term="/思维"/>
    
    <category term="/方法论"/>
    
    <content type="html">
      <![CDATA[<p>之前<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>谈到“驱动”这个概念。说“驱动”讲的是拆分问题的单位，现在尝试讨论下，什么样的东西，适合用来作为这个驱动者，也就是说，什么样的东西，适合用来拆分问题。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2018/01/14/driver/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[“驱动”与“面向”]]></title>
    <link href="http://www.nietongxue.xyz/blog/2017/12/14/d-o/"/>
    <updated>2017-12-14T22:45:56+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2017/12/14/d-o</id>
    
    <category term="/架构"/>
    
    <category term="/过程"/>
    
    <category term="/思维"/>
    
    <category term="/方法论"/>
    
    <content type="html">
      <![CDATA[<p>领域驱动、测试驱动、风险驱动；面向对象、面向组件、面向服务。这些说法我们都已经很熟悉了，大家研究的重点往往是其中的那个名词。名词是关键没错，但那已经说得够多了。今天来聊聊其中的动词，“驱动”与“面向”。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2017/12/14/d-o/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[涌现中的架构（三）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2017/06/25/emergence3/"/>
    <updated>2017-06-25T12:56:59+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2017/06/25/emergence3</id>
    
    <category term="/架构"/>
    
    <category term="/敏捷"/>
    
    <content type="html">
      <![CDATA[<p>之前有思考过研发团队发展的三个要素<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。</p>

<p>在敏捷环境中，进一步思考了三个要素和它们之间的关系。
      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2017/06/25/emergence3/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微服务划分：按业务能力 vs 按子域]]></title>
    <link href="http://www.nietongxue.xyz/blog/2017/06/11/ms-split/"/>
    <updated>2017-06-11T16:15:44+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2017/06/11/ms-split</id>
    
    <category term="/架构"/>
    
    <category term="/微服务"/>
    
    <category term="/领域"/>
    
    <content type="html">
      <![CDATA[<p>微服务的划分方法，常见的是两种，按业务能力和按子域<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。
      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2017/06/11/ms-split/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linus的代码与数据结构]]></title>
    <link href="http://www.nietongxue.xyz/blog/2017/06/03/code-data/"/>
    <updated>2017-06-03T15:39:24+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2017/06/03/code-data</id>
    
    <category term="/架构"/>
    
    <category term="/开发"/>
    
    <category term="/思维"/>
    
    <content type="html">
      <![CDATA[<p>Linus说： &ldquo;烂程序员关心的是代码。好程序员关心的是数据结构和它们之间的关系。&rdquo;</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2017/06/03/code-data/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[与复杂同行（番外）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2017/05/21/complex80/"/>
    <updated>2017-05-21T14:57:18+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2017/05/21/complex80</id>
    
    <category term="/架构"/>
    
    <content type="html">
      <![CDATA[<p>在强制家长培训中，一位小学数学的教学专家谈了一个案例 -</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2017/05/21/complex80/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[涌现中的架构（一）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2017/04/04/emergence/"/>
    <updated>2017-04-04T17:43:06+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2017/04/04/emergence</id>
    
    <category term="/架构"/>
    
    <category term="/敏捷"/>
    
    <category term="/方法论"/>
    
    <content type="html">
      <![CDATA[<p>之前对敏捷架构的思考和实践主要在敏捷团队内部<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。这个系列主要探讨在公司级别的敏捷架构实践。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2017/04/04/emergence/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[随便微科幻]]></title>
    <link href="http://www.nietongxue.xyz/blog/2017/01/31/suibian/"/>
    <updated>2017-01-31T23:58:19+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2017/01/31/suibian</id>
    
    <category term="/科幻"/>
    
    <content type="html">
      <![CDATA[<h4>（之一）</h4>

<p>— 老大，遗传算法编号EARTH250发展出的智能开始自模拟了。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2017/01/31/suibian/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[技术的对面]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/12/23/tech/"/>
    <updated>2016-12-23T09:13:54+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/12/23/tech</id>
    
    <category term="/架构"/>
    
    <category term="/思维"/>
    
    <category term="/方法论"/>
    
    <content type="html">
      <![CDATA[<p>“技术”的对面是“策略”，不是“应用”、“方法”，不是“思想”、“道”，也不是“艺术”或“诗歌”。</p>

      
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[与复杂同行（一）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/12/11/complex/"/>
    <updated>2016-12-11T13:21:04+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/12/11/complex</id>
    
    <category term="/架构"/>
    
    <category term="/思维"/>
    
    <content type="html">
      <![CDATA[<p><strong>复杂性平方律</strong></p>

<blockquote><p>系统的复杂性正比于系统规模的平方</p></blockquote>

<p>一、系统的复杂性不仅由节点的数量（即“规模”）带来，更多的是由节点间的关系（包括没有关系）带来。
      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/12/11/complex/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分布式事务，也谈（番外）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/10/07/process/"/>
    <updated>2016-10-07T14:29:52+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/10/07/process</id>
    
    <category term="/架构"/>
    
    <category term="/模式"/>
    
    <category term="/分布式"/>
    
    <content type="html">
      <![CDATA[<h3>过程管理，一个基础模式？</h3>

<p>系列中<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>提到，事务管理，实质是一个过程管理。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/10/07/process/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分布式事务，也谈（之三）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/10/06/transaction3/"/>
    <updated>2016-10-06T00:43:57+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/10/06/transaction3</id>
    
    <category term="/架构"/>
    
    <category term="/设计"/>
    
    <category term="/分布式"/>
    
    <content type="html">
      <![CDATA[<p>继续谈实现模型。按抽象层次分层，设计为知识→操作多层结构，每个层针对不同层面的概念、逻辑和开发者。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/10/06/transaction3/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分布式事务，也谈（之二）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/09/26/transaction2/"/>
    <updated>2016-09-26T16:08:48+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/09/26/transaction2</id>
    
    <category term="/架构"/>
    
    <category term="/设计"/>
    
    <category term="/分布式"/>
    
    <content type="html">
      <![CDATA[<p>如前一篇提到的 <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，本篇谈一谈实现模型<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/09/26/transaction2/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分布式事务，也谈]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/09/19/transaction/"/>
    <updated>2016-09-19T17:16:43+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/09/19/transaction</id>
    
    <category term="/架构"/>
    
    <category term="/设计"/>
    
    <category term="/分布式"/>
    
    <content type="html">
      <![CDATA[<p>近来有挺多文章谈“分布式事务”。
这些文章主要是从实现模式角度来谈的。比如常见的模式有哪些，哪些个模式适合哪种场景，有什么优点缺点，根据什么选择等等。
      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/09/19/transaction/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[时事：996]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/09/07/996/"/>
    <updated>2016-09-07T21:26:15+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/09/07/996</id>
    
    <category term="/管理"/>
    
    <category term="/时事"/>
    
    <content type="html">
      <![CDATA[<p>996或者其他工作制，涉及到几个关系 -</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/09/07/996/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[问题空间与解空间]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/08/14/question2/"/>
    <updated>2016-08-14T20:29:27+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/08/14/question2</id>
    
    <category term="/架构"/>
    
    <category term="/过程"/>
    
    <category term="/思维"/>
    
    <category term="/方法论"/>
    
    <content type="html">
      <![CDATA[<p>问题空间与解空间<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，体现了思考的一般过程，所以在很多方法论中有所表现。</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/08/14/question2/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[架构设计过程的驱动技术（三）]]></title>
    <link href="http://www.nietongxue.xyz/blog/2016/08/13/question/"/>
    <updated>2016-08-13T20:29:27+08:00</updated>
    <id>http://www.nietongxue.xyz/blog/2016/08/13/question</id>
    
    <category term="/架构"/>
    
    <category term="/过程"/>
    
    <category term="/方法论"/>
    
    <content type="html">
      <![CDATA[<p>特征驱动和风险驱动，看来是相对完备的驱动技术；模式驱动，则不是那么完备。
这两类驱动技术的区别究竟从何而来呢？</p>


      
      
        <p>
          <a rel="full-article" href="http://www.nietongxue.xyz/blog/2016/08/13/question/">Read on &rarr;</a>
        </p>
      
      ]]>
    </content>
  </entry>
  
</feed>
